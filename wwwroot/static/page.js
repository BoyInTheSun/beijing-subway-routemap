/**
 * @license
 * Code in this file is licensed under MPL-2.0.
 * The visual output generated by this code is licensed under CC BY-SA 4.0.
 * please see `https://github.com/BoyInTheSun/beijing-subway-routemap/blob/main/LICENSE` for detail。
 * 
 * 本文件中的代码遵循 MPL-2.0 许可证。
 * 由此代码生成的视觉输出内容遵循 CC BY-SA 4.0 许可证。
 * 详细请参见 `https://github.com/BoyInTheSun/beijing-subway-routemap/blob/main/LICENSE` 。
 */

var wde = set_wde();
set_time_now();
write_secelt_time('Start');
write_secelt_time('End');
var speeds = [1, 2, 4, 8, 15, 30, 60, 120, 240, 600];
write_secelt_speed();
var is_lines;
write_secelt_lines();
count_lines();
//set_size('m');
var is_hide_linename = false;
var is_hide_stationname = false;
var is_hide_station = false;

//draw_map(window.is_hide_station, window.is_hide_linename, window.is_hide_stationname);
start();
svg_init_xy();



//侧边栏展开与关闭
function open_siderbar() {
    document.getElementById('sider-bar').style.left = '0px';
    for (let each of document.getElementsByClassName('side-2l'))
        each.style.height = '48px';
}
function close_siderbar() {
    document.getElementById('sider-bar').style.left = '-168px';
    for (let each of document.getElementsByClassName('side-2l'))
        each.style.height = '24px';
}
function invert_siderbar() {
    if (document.getElementById("sider-bar").style.left === '0px')
        close_siderbar();
    else
        open_siderbar();
}
function set_start_time() {
    start_hour = document.getElementById("startHour").innerText;
    start_minute = document.getElementById("startMinute").innerText;
    start_second = document.getElementById("startHour").innerText;
    end_hour = document.getElementById("endHour").innerText;
    end_minute = document.getElementById("endMinute").innerText;
    end_second = document.getElementById("endHour").innerText;
}

function to02d(i) {
    s = i.toString();
    if (s.length === 1) {
        s = '0' + s;
    }
    return s;
}

function set_wde(wde) {
    if (!wde) {
        var d = new Date();
        if (d.getDay() == 0 || d.getDay() == 6) wde = 'we';
        else wde = 'wd';
    }
    if (wde === 'wd') {
        window.wde = 'wd';
        document.getElementById('btn_wd').className = 'side-2l2-btn btn-selected';
        document.getElementById('btn_we').className = 'side-2l2-btn btn-unselected';
    }
    else if (wde === 'we') {
        window.wde = 'we';
        document.getElementById('btn_we').className = 'side-2l2-btn btn-selected';
        document.getElementById('btn_wd').className = 'side-2l2-btn btn-unselected';
    }
    return wde;
}
function set_size(size) {
    if (size === 'l') {
        window.train_size = 4;
        document.getElementById('btn_size_l').className = 'side-2l2-btn btn-selected';
        document.getElementById('btn_size_m').className = 'side-2l2-btn btn-unselected';
        document.getElementById('btn_size_s').className = 'side-2l2-btn btn-unselected';
        document.getElementById('btn_size_xs').className = 'side-2l2-btn btn-unselected';
    }
    else if (size === 'm') {
        window.train_size = 3;
        document.getElementById('btn_size_l').className = 'side-2l2-btn btn-unselected';
        document.getElementById('btn_size_m').className = 'side-2l2-btn btn-selected';
        document.getElementById('btn_size_s').className = 'side-2l2-btn btn-unselected';
        document.getElementById('btn_size_xs').className = 'side-2l2-btn btn-unselected';
    }
    else if (size === 's') {
        window.train_size = 2;
        document.getElementById('btn_size_l').className = 'side-2l2-btn btn-unselected';
        document.getElementById('btn_size_m').className = 'side-2l2-btn btn-unselected';
        document.getElementById('btn_size_s').className = 'side-2l2-btn btn-selected';
        document.getElementById('btn_size_xs').className = 'side-2l2-btn btn-unselected';
    }
    else if (size === 'xs') {
        window.train_size = 1;
        document.getElementById('btn_size_l').className = 'side-2l2-btn btn-unselected';
        document.getElementById('btn_size_m').className = 'side-2l2-btn btn-unselected';
        document.getElementById('btn_size_s').className = 'side-2l2-btn btn-selected';
        document.getElementById('btn_size_xs').className = 'side-2l2-btn btn-unselected';
    }
    let t = window.train_size;
    //let points = `0,0 ${t * 3},0 ${t},${t * 2} -${t * 3},${t * 2} -${t * 3},0`;
    let points = `${t},0 ${t * 7},0 ${t * 5},${t * 2} ${t},${t * 2}`;
    window.xml_symbol = `<polygon class="train" points="${points}" stroke-width="${t / 2}" stroke="#000000" />`;
    d3.select('#train')
        .attr('x', -t * 4)
        .attr('refX', t * 4)
        .html(window.xml_symbol);
}
function reverse_show_linename() {
    window.is_hide_linename = !window.is_hide_linename;
    if (window.is_hide_linename) {
        document.getElementById('btn_linename').className = 'side-2l2-btn btn-selected';
        d3.select('#g_linenames').attr('display', 'none');
    }
    else {
        document.getElementById('btn_linename').className = 'side-2l2-btn btn-unselected';
        d3.select('#g_linenames').attr('display', '');
    }
}
function reverse_show_stationname() {
    window.is_hide_stationname = !window.is_hide_stationname;
    if (window.is_hide_stationname) {
        document.getElementById('btn_stationname').className = 'side-2l2-btn btn-selected';
        d3.select('#g_stationnames').attr('display', 'none');
    }
    else {
        document.getElementById('btn_stationname').className = 'side-2l2-btn btn-unselected';
        d3.select('#g_stationnames').attr('display', '');
    }
}
function reverse_show_station() {
    window.is_hide_station = !window.is_hide_station;
    if (window.is_hide_station) {
        document.getElementById('btn_station').className = 'side-2l2-btn btn-selected';
        d3.select('#g_stations').attr('display', 'none');
    }
    else {
        document.getElementById('btn_station').className = 'side-2l2-btn btn-unselected';
        d3.select('#g_stations').attr('display', '');
    }
}

function get_lines_most(most) {
    /*most is 'earliest' or 'latest'*/
    var line_most_wde = window.lines_most[most][window.wde];
    var most_time;
    for (line_name in window.is_lines) {
        for (direct in window.is_lines[line_name]) {
            if (!window.is_lines[line_name][direct]) continue;
            let temp = line_most_wde[line_name][direct];
            if (!most_time || (most === 'earliest' && most_time > temp) || (most === 'latest' && most_time < temp)) most_time = temp;
        }
    }
    if (!most_time) {
        if (most === 'earliest') most_time = 3 * 60;
        else if (most === 'latest') most_time = 2 * 60 + 59 + 59 / 60;
    }
    return most_time;
}
function set_time_most() {
    /*已废弃*/
    let [start_hour, start_minute, start_second] = time2h_m_s(get_lines_most('earliest'));
    document.getElementById('startHour').innerText = to02d(start_hour);
    document.getElementById('startMinute').innerText = to02d(start_minute);
    document.getElementById('startSecond').innerText = to02d(start_second);
    let [end_hour, end_minute, end_second] = time2h_m_s(get_lines_most('latest'));
    document.getElementById('endHour').innerText = to02d(end_hour);
    document.getElementById('endMinute').innerText = to02d(end_minute);
    document.getElementById('endSecond').innerText = to02d(end_second);
}
function set_time_now() {
    var time_now = new Date();
    document.getElementById('startHour').innerText = to02d(time_now.getHours());
    document.getElementById('startMinute').innerText = to02d(time_now.getMinutes());
    document.getElementById('startSecond').innerText = to02d(time_now.getSeconds());
    if (time_now.getHours() == 2) {
        document.getElementById('endHour').innerText = '02';
        document.getElementById('endMinute').innerText = '59';
        document.getElementById('endSecond').innerText = '59';
    }
    else {
        document.getElementById('endHour').innerText = to02d((time_now.getHours() + 1) % 24);
        document.getElementById('endMinute').innerText = to02d(time_now.getMinutes());
        document.getElementById('endSecond').innerText = to02d(time_now.getSeconds());
    }
}
function set_time_after_if_before() {
    var start_hour = parseInt(document.getElementById('startHour').innerText);
    if (start_hour <= 2) start_hour += 24;
    var start_minute = parseInt(document.getElementById('startMinute').innerText);
    var start_second = parseInt(document.getElementById('startSecond').innerText);
    var end_hour = parseInt(document.getElementById('endHour').innerText);
    if (end_hour <= 2) end_hour += 24;
    var end_minute = parseInt(document.getElementById('endMinute').innerText);
    var end_second = parseInt(document.getElementById('endSecond').innerText);
    if (start_hour == 2 + 24) {
        document.getElementById('endHour').innerText = '02';
        document.getElementById('endMinute').innerText = '59';
        document.getElementById('endSecond').innerText = '59';
    }
    else if (end_hour * 60 * 60 + end_minute * 60 + end_second <= start_hour * 60 * 60 + start_minute * 60 + start_second) {
        document.getElementById('endHour').innerText = to02d((start_hour + 1) % 24);
        document.getElementById('endMinute').innerText = to02d(start_minute);
        document.getElementById('endSecond').innerText = to02d(start_second);
    }
}
function reset() {
    set_wde();
    set_time_now();
    for (line_name in window.is_lines) {
        for (direct in window.is_lines[line_name]) {
            window.is_lines[line_name][direct] = true;
        }
    }
    document.getElementById('speed').innerText = 1;
    for (btn of document.getElementsByClassName('popup-btn')) {
        btn.className = 'popup-btn btn-unselected';
    }
    count_lines();
}
function reset_map() {
    set_size('m');
    window.is_hide_linename = false;
    window.is_hide_stationname = false;
    window.is_hide_station = false;
    d3.select('#g_stations').attr('display', '');
    d3.select('#g_linenames').attr('display', '');
    d3.select('#g_stationnames').attr('display', '');
    document.getElementById('btn_linename').className = 'side-2l2-btn btn-unselected';
    document.getElementById('btn_stationname').className = 'side-2l2-btn btn-unselected';
    document.getElementById('btn_station').className = 'side-2l2-btn btn-unselected';
    svg_init_xy();
}
/* 弹出框相关函数 */
function write_secelt_time(time_type) {
    div_hour = document.getElementById('select' + time_type + 'Hour');
    div_minute = document.getElementById('select' + time_type + 'Minute');
    div_second = document.getElementById('select' + time_type + 'Second');
    var temp = '';
    for (let i = 3; i <= 26; i++) {
        let j = to02d(i % 24);
        temp += '<div>' + j + '</div>';
    }
    div_hour.innerHTML = temp;
    var temp = '';
    for (let i = 0; i <= 59; i++) {
        let j = to02d(i);
        if (j.length === 1) {
            j = '0' + j;
        }
        temp += '<div>' + j + '</div>';
    }
    div_minute.innerHTML = temp;
    div_second.innerHTML = temp;
}
function write_secelt_speed() {
    var div_speed = document.getElementById('selectSpeed');
    var temp = '';
    for (speed of window.speeds) {
        temp += '<div>' + speed + '</div>';
    }
    temp += '<div><input type="text" placeholder="其他请输入" id="other_speed"></input></div>';
    div_speed.innerHTML = temp;
}
function write_secelt_lines() {
    window.is_lines = new Object();
    var sche;
    sche = window.sche_wde[window.wde];
    var temp = '';
    for (line_name in sche) {
        window.is_lines[line_name] = new Object();
        temp += '<div class="popup-line"><div class="popup-linename" onclick="invert_line(\'' + line_name + '\', null)" style="background-color: ' + line_colors[line_name] + '; color: #ffffff">' + line_name + '</div>';
        let direct_index = 0;
        for (direct in sche[line_name]) {
            window.is_lines[line_name][direct] = true;
            direct_index += 1;
            temp += '<div class="popup-direct-' + direct_index + '" onclick="invert_line(\'' + line_name + '\', \'' + direct + '\')" style="background-color: ' + line_colors[line_name] + '; color: #ffffff">' + direct + '</div>';
        }
        temp += '</div>';
    }
    document.getElementById('selectLines').innerHTML = temp;
}

function show_popup_time(time_type) {
    document.getElementById('select' + time_type + 'Time').style.display = '';
    var div_hour = document.getElementById('select' + time_type + 'Hour');
    var div_minute = document.getElementById('select' + time_type + 'Minute');
    var div_second = document.getElementById('select' + time_type + 'Second');

    set_scroll_opacity_by_div(div_hour);
    var target_hour = parseInt(document.getElementById(time_type.toLowerCase() + 'Hour').innerText);
    scroll_jump_to_y((target_hour - 3 + 24) % 24 * 24, div_hour);

    set_scroll_opacity_by_div(div_minute);
    var target_minute = parseInt(document.getElementById(time_type.toLowerCase() + 'Minute').innerText);
    scroll_jump_to_y(target_minute * 24, div_minute);

    set_scroll_opacity_by_div(div_second);
    var target_second = parseInt(document.getElementById(time_type.toLowerCase() + 'Second').innerText);
    scroll_jump_to_y(target_second * 24, div_second);
}
function show_popup_speed() {
    document.getElementById('selectSpeedContent').style.display = '';
    var div_speed = document.getElementById('selectSpeed');
    set_scroll_opacity_by_div(div_speed);
    var target_speed = parseFloat(document.getElementById('speed').innerText);
    var index = window.speeds.indexOf(target_speed);
    if (index === -1) {
        document.getElementById('other_speed').value = target_speed;
        scroll_jump_to_y(window.speeds.length * 24, div_speed);
    }
    else {
        document.getElementById('other_speed').value = null;
        scroll_jump_to_y(index * 24, div_speed);
    }
}


function show_popup_lines() {
    document.getElementById('selectLinesContent').style.display = null;
    refresh_lines();
}

function ban_event(event) {
    event.preventDefault();
}
function scroll_jump_to_y(y, scroll_div) {
    scroll_div.setAttribute('goingto', y);
    scroll_div.scrollTop = y;
}

function scroll_to_y(y, scroll_div) {
    /*按钮重置*/
    btns = document.getElementsByClassName('popup-btn');
    for (btn of btns) {
        btn.className = 'popup-btn btn-unselected';
    }
    /*y合法化*/
    if (y < 0) { y = 0; }
    /*if (y > scroll_div.scrollTopMax) y = scroll_div.scrollTopMax;*/
    else if (y > scroll_div.scrollHeight - 192) { y = scroll_div.scrollHeight - 192; }
    scroll_div.setAttribute('goingto', y);

    var up_or_down = 1; //up
    if (scroll_div.scrollTop > y) {
        up_or_down = -1; //down
    }
    const step = () => {
        const c = scroll_div.scrollTop;
        //console.log(y, c, scroll_div.scrollHeight - 192, c + (y - c) / 8, up_or_down * (y - c));
        if (y == parseInt(scroll_div.getAttribute('goingto'))) {
            if (up_or_down * (y - c) > 8) {
                window.requestAnimationFrame(step);
                scroll_div.scrollTo(0, c + (y - c) / 8);
            }
            else if (up_or_down * (y - c) > 1) {
                window.requestAnimationFrame(step);
                scroll_div.scrollTo(0, c + up_or_down);
            }
            else {
                scroll_div.scrollTo(0, y);
            }
        }
    }
    step();
}
function set_scroll_y_on_wheel(event) {
    var scroll_div = event.target;
    while (scroll_div.children.length <= 1) scroll_div = scroll_div.parentElement;
    scroll_to_y(parseInt(scroll_div.getAttribute('goingto')) - event.wheelDeltaY / 5 * 3, scroll_div);
}
function set_scroll_y_on_down(event) {
    /*down*/
    var mouse_y_now;
    var mouse_y_step = 0;
    if (event.changedTouches && event.changedTouches[0]) {
        mouse_y_now = event.changedTouches[0].clientY;
    }
    else {
        mouse_y_now = event.clientY;
    }
    var scroll_div = event.target;
    while (scroll_div.children.length <= 1) {
        scroll_div = scroll_div.parentElement;
    }
    const mouse_y_start = mouse_y_now;
    const scroll_y_start = scroll_div.scrollTop;
    function move(event) {
        /*move*/
        if (event.changedTouches && event.changedTouches[0]) {
            mouse_y_temp = event.changedTouches[0].clientY;
        }
        else {
            mouse_y_temp = event.clientY;
        }
        mouse_y_step = mouse_y_temp - mouse_y_now;
        mouse_y_now = mouse_y_temp;
        scroll_div.scrollTop = scroll_y_start - mouse_y_now + mouse_y_start;
    }
    function stop(event) {
        /*up*/
        if (event.changedTouches && event.changedTouches[0]) {
            mouse_y_now = event.changedTouches[0].clientY;
        }
        else {
            mouse_y_now = event.clientY;
        }
        if (Math.abs(mouse_y_now - mouse_y_start) <= 12) {
            /*仅点击，跳转*/
            var y_parent = scroll_div.getBoundingClientRect().top;
            scroll_to_y(Math.round((scroll_div.scrollTop / 24) - Math.ceil((y_parent - mouse_y_start + 84) / 24)) * 24, scroll_div);
        }
        else {
            /*拖拽滚动*/
            if (mouse_y_step) {
                /*惯性滑动*/
                scroll_to_y(Math.round((scroll_div.scrollTop - mouse_y_step * 8) / 24) * 24, scroll_div);
            }
            else {
                /*吸附，似乎这里并不会被执行*/
                scroll_to_y(Math.round(scroll_div.scrollTop / 24) * 24, scroll_div);
            }
        }
        document.removeEventListener('mousemove', move);
        document.removeEventListener('touchmove', move);
        document.removeEventListener('mouseup', stop);
        document.removeEventListener('touchend', stop);
    }
    document.addEventListener('mousemove', move);
    document.addEventListener('touchmove', move);
    document.addEventListener('mouseup', stop);
    document.addEventListener('touchend', stop);
}
function set_scroll_opacity_by_div(scroll_div) {
    var scroll_items = scroll_div.getElementsByTagName('div');
    var y_parent = scroll_div.getBoundingClientRect().top;
    for (scroll_item of scroll_items) {
        var y = scroll_item.getBoundingClientRect().top - y_parent;
        if (y <= -12) {
            scroll_item.style.opacity = 0;
        }
        else if (y < 72) {
            scroll_item.style.opacity = (y + 12) / 96;
        }
        else if (y < 96) {
            scroll_item.style.opacity = 1;
        }
        else if (y < 180) {
            scroll_item.style.opacity = 1 - (y - 96) / 96;
        }
        else {
            scroll_item.style.opacity = 0;
        }
    }

}
function set_scroll_opacity_by_event(event) {
    var scroll_div = event.target;
    set_scroll_opacity_by_div(scroll_div);
}

var scroll_divs = Array();
for (each of document.getElementsByClassName("popup-digit")) {
    scroll_divs.push(each);
}
for (each of document.getElementsByClassName("popup-speed")) {
    scroll_divs.push(each);
}

for (scroll_div of scroll_divs) {
    scroll_div.addEventListener('wheel', ban_event);
    scroll_div.addEventListener('wheel', set_scroll_y_on_wheel);
    scroll_div.addEventListener('mousedown', set_scroll_y_on_down);
    scroll_div.addEventListener('touchstart', set_scroll_y_on_down);
    scroll_div.addEventListener('scroll', set_scroll_opacity_by_event);
    var scroll_items = scroll_div.getElementsByTagName('div');
    for (scroll_item of scroll_items) {
        scroll_item.addEventListener('wheel', ban_event);
        //scroll_item.addEventListener('mousedown', set_scroll_y_on_down);
        //scroll_item.addEventListener('touchstart', set_scroll_y_on_down);
        //scroll_item.addEventListener('touchstart', ban_event);
        scroll_item.addEventListener('touchmove', ban_event);
        //scroll_item.addEventListener('touchend', ban_event);
    }
}

function select_time(this_btn, div_hour, div_minute, div_second, action) {
    var target_hour = 0;
    var target_minute = 0;
    var target_second = 0;
    if (action === 'now') {
        var time_now = new Date();
        target_hour = time_now.getHours();
        target_minute = time_now.getMinutes();
        target_second = time_now.getSeconds();
    }
    else if (action === 'rondom') {
        target_hour = Math.floor(Math.random() * 24);
        target_minute = Math.floor(Math.random() * 60);
        target_second = Math.floor(Math.random() * 60);
    }
    else if (action === 'after') {
        target_hour = (parseInt(document.getElementById('startHour').innerText) + 1) % 24;
        target_minute = parseInt(document.getElementById('startMinute').innerText);
        target_second = parseInt(document.getElementById('startSecond').innerText);
    }
    else if (action === 'begin') {
        [target_hour, target_minute, target_second] = time2h_m_s(get_lines_most('earliest'));
    }
    else if (action === 'end') {
        [target_hour, target_minute, target_second] = time2h_m_s(get_lines_most('latest'));
    }

    scroll_to_y((target_hour - 3 + 24) % 24 * 24, div_hour);
    scroll_to_y(target_minute * 24, div_minute);
    scroll_to_y(target_second * 24, div_second);

    this_btn.className = 'popup-btn btn-selected';
}
function select_start_time(this_btn, action) {
    var div_hour = document.getElementById('selectStartHour');
    var div_minute = document.getElementById('selectStartMinute');
    var div_second = document.getElementById('selectStartSecond');
    if (action === 'ok') {
        /*
        var selected_hour = (Math.round(div_hour.scrollTop / 24) + 3) % 24;
        var selected_minute = Math.round(div_minute.scrollTop / 24);
        var selected_second = Math.round(div_second.scrollTop / 24);
        */
        var selected_hour = (Math.round(div_hour.getAttribute('goingto') / 24) + 3) % 24;
        var selected_minute = Math.round(div_minute.getAttribute('goingto') / 24);
        var selected_second = Math.round(div_second.getAttribute('goingto') / 24);
        document.getElementById('startHour').innerText = to02d(selected_hour);
        document.getElementById('startMinute').innerText = to02d(selected_minute);
        document.getElementById('startSecond').innerText = to02d(selected_second);
        document.getElementById('selectStartTime').style.display = 'none';
    }
    else {
        select_time(this_btn, div_hour, div_minute, div_second, action);
    }
}
function select_end_time(this_btn, action) {
    var div_hour = document.getElementById('selectEndHour');
    var div_minute = document.getElementById('selectEndMinute');
    var div_second = document.getElementById('selectEndSecond');
    if (action === 'ok') {
        /*
        var selected_hour = (Math.round(div_hour.scrollTop / 24) + 3) % 24;
        var selected_minute = Math.round(div_minute.scrollTop / 24);
        var selected_second = Math.round(div_second.scrollTop / 24);
        */
        var selected_hour = (Math.round(div_hour.getAttribute('goingto') / 24) + 3) % 24;
        var selected_minute = Math.round(div_minute.getAttribute('goingto') / 24);
        var selected_second = Math.round(div_second.getAttribute('goingto') / 24);
        document.getElementById('endHour').innerText = to02d(selected_hour);
        document.getElementById('endMinute').innerText = to02d(selected_minute);
        document.getElementById('endSecond').innerText = to02d(selected_second);
        document.getElementById('selectEndTime').style.display = 'none';
    }
    else {
        select_time(this_btn, div_hour, div_minute, div_second, action);
    }
}
function select_speed(this_btn, action) {
    var div_speed = document.getElementById('selectSpeed');
    if (action === 'ok') {
        var index_speed = Math.round(div_speed.getAttribute('goingto') / 24);
        if (index_speed < window.speeds.length) {
            document.getElementById('speed').innerText = window.speeds[index_speed];
        }
        else if (!isNaN(parseFloat(document.getElementById('other_speed').value))) {
            let speed = parseFloat(document.getElementById('other_speed').value);
            if (speed > 3600) speed = 3600;
            else if (speed < 0.0001) speed = 0.0001;
            document.getElementById('speed').innerText = speed;
        }
        else {
            document.getElementById('speed').innerText = '1';
        }
        document.getElementById('selectSpeedContent').style.display = 'none';
    }
    else {
        if (action === 'other') {
            scroll_to_y(window.speeds.length * 24, div_speed);
        }
        else {
            var speed = parseInt(action);
            var index_speed = window.speeds.indexOf(speed);
            scroll_to_y(index_speed * 24, div_speed);
        }
        this_btn.className = 'popup-btn btn-selected';
    }
}


function scroll_lines_to_y(y) {
    var scroll_lines_div = document.getElementById('selectLines');
    /*y合法化*/
    if (y < 0) { y = 0; }
    else if (y > scroll_lines_div.scrollHeight - 192) { y = scroll_lines_div.scrollHeight - 192; }
    scroll_lines_div.setAttribute('goingto', y);

    var up_or_down = 1; //up
    if (scroll_lines_div.scrollTop > y) {
        up_or_down = -1; //down
    }
    const step = () => {
        const c = scroll_lines_div.scrollTop;
        //console.log(y, c, scroll_lines_div.scrollHeight - 192, c + (y - c) / 8, up_or_down * (y - c));
        if (y == parseInt(scroll_lines_div.getAttribute('goingto'))) {
            if (up_or_down * (y - c) > 8) {
                window.requestAnimationFrame(step);
                scroll_lines_div.scrollTo(0, c + (y - c) / 8);
            }
            else if (up_or_down * (y - c) > 1) {
                window.requestAnimationFrame(step);
                scroll_lines_div.scrollTo(0, c + up_or_down);
            }
            else {
                scroll_lines_div.scrollTo(0, y);
            }
        }
    }
    step();
}
function set_scroll_lines_y_on_wheel(event) {
    var scroll_lines_div = document.getElementById('selectLines');
    scroll_lines_to_y(parseInt(scroll_lines_div.getAttribute('goingto')) - event.wheelDeltaY / 5 * 3);
}
function set_scroll_lines_y_on_down(event) {
    /*down*/
    var mouse_y_now;
    var mouse_y_step = 0;
    if (event.changedTouches && event.changedTouches[0]) {
        mouse_y_now = event.changedTouches[0].clientY;
    }
    else {
        mouse_y_now = event.clientY;
    }
    var scroll_lines_div = document.getElementById('selectLines');
    while (scroll_lines_div.children.length <= 1) {
        scroll_lines_div = scroll_lines_div.parentElement;
    }
    const mouse_y_start = mouse_y_now;
    const scroll_lines_y_start = scroll_lines_div.scrollTop;
    //console.log(event.target, mouse_y_now, scroll_lines_y_start);

    function move(event) {
        /*move*/
        if (event.changedTouches && event.changedTouches[0]) {
            mouse_y_temp = event.changedTouches[0].clientY;
        }
        else {
            mouse_y_temp = event.clientY;
        }
        mouse_y_step = mouse_y_temp - mouse_y_now;
        mouse_y_now = mouse_y_temp;
        scroll_lines_div.scrollTop = scroll_lines_y_start - mouse_y_now + mouse_y_start;
    }
    function stop(event) {
        /*up*/
        if (event.changedTouches && event.changedTouches[0]) {
            mouse_y_now = event.changedTouches[0].clientY;
        }
        else {
            mouse_y_now = event.clientY;
        }

        if (Math.abs(mouse_y_now - mouse_y_start) <= 12) {
            /*仅点击*/
            var y_parent = scroll_lines_div.getBoundingClientRect().top;
            if (y_parent - mouse_y_start > -24) {
                scroll_lines_to_y(scroll_lines_div.scrollTop - 96);
            }
            if (y_parent - mouse_y_start + 192 < 24) {
                scroll_lines_to_y(scroll_lines_div.scrollTop + 96);
            }
        }
        else {
            /*拖拽滚动*/
            if (mouse_y_step) {
                /*惯性滑动*/
                scroll_lines_to_y(Math.round((scroll_lines_div.scrollTop - mouse_y_step * 8) / 24) * 24);
            }
            else {
                /*吸附，似乎这里并不会被执行*/
                scroll_lines_to_y(Math.round(scroll_lines_div.scrollTop / 24) * 24);
            }
        }
        document.removeEventListener('mousemove', move);
        document.removeEventListener('touchmove', move);
        document.removeEventListener('mouseup', stop);
        document.removeEventListener('touchend', stop);
    }
    document.addEventListener('mousemove', move);
    document.addEventListener('touchmove', move);
    document.addEventListener('mouseup', stop);
    document.addEventListener('touchend', stop);
}
function set_scroll_lines_opacity_by_div(scroll_lines_div) {
    var y_parent = scroll_lines_div.getBoundingClientRect().top;
    for (scroll_lines_items of scroll_lines_div.getElementsByClassName('popup-line')) {
        for (scroll_lines_item of scroll_lines_items.childNodes) {
            var y = scroll_lines_item.getBoundingClientRect().top - y_parent;
            if (y <= -12) {
                scroll_lines_item.style.opacity = 0;
            }
            else if (y < 12) {
                scroll_lines_item.style.opacity = (y + 12) / 24;
            }
            else if (y < 156) {
                scroll_lines_item.style.opacity = 1;
            }
            else if (y < 180) {
                scroll_lines_item.style.opacity = 1 - (y - 156) / 24;
            }
            else {
                scroll_lines_item.style.opacity = 0;
            }
        }
    }

}
function set_scroll_lines_opacity_by_event(event) {
    var scroll_lines_div = event.target;
    set_scroll_lines_opacity_by_div(scroll_lines_div);
}

var scroll_lines_div = document.getElementById('selectLines');
scroll_lines_div.addEventListener('wheel', ban_event);
scroll_lines_div.addEventListener('wheel', set_scroll_lines_y_on_wheel);
scroll_lines_div.addEventListener('mousedown', set_scroll_lines_y_on_down);
scroll_lines_div.addEventListener('touchstart', set_scroll_lines_y_on_down);
scroll_lines_div.addEventListener('touchmove', ban_event);
scroll_lines_div.addEventListener('scroll', set_scroll_lines_opacity_by_event);
var scroll_lines_items = scroll_lines_div.getElementsByClassName('popup-line');
for (scroll_lines_item of scroll_lines_items) {
    scroll_lines_item.addEventListener('wheel', ban_event);
    //scroll_lines_item.addEventListener('mousedown', set_scroll_lines_y_on_down);
    //scroll_lines_item.addEventListener('touchstart', set_scroll_lines_y_on_down);
    //scroll_lines_item.addEventListener('touchstart', ban_event);
    scroll_lines_item.addEventListener('touchmove', ban_event);
    //scroll_lines_item.addEventListener('touchend', ban_event);
}

function count_lines() {
    var num_lines = 0;
    var num_direct = 0;
    for (line_name in window.is_lines) {
        let t = false;
        for (direct in window.is_lines[line_name]) {
            if (window.is_lines[line_name][direct]) {
                num_direct++;
                t = true;
            }
        }
        if (t) {
            num_lines++;
        }
    }
    document.getElementById('countDirect').innerText = num_direct;
    document.getElementById('countLines').innerText = num_lines;
}
function refresh_lines() {
    /*按钮重置*/
    btns = document.getElementsByClassName('popup-btn');
    for (btn of btns) {
        btn.className = 'popup-btn btn-unselected';
    }
    var div_lines = document.getElementById('selectLines');
    set_scroll_lines_opacity_by_div(div_lines);
    for (let i = 0; i < Object.keys(window.is_lines).length; i++) {
        var line_name = Object.keys(window.is_lines)[i];
        var t = false;
        for (let j = 0; j < Object.keys(window.is_lines[line_name]).length; j++) {
            var direct = Object.keys(window.is_lines[line_name])[j];
            if (window.is_lines[line_name][direct]) {
                t = true;
                //div_lines.childNodes[i].childNodes[j + 1].style = 'background-color: ' + line_colors[line_name] + '; color: #ffffff;';
                div_lines.childNodes[i].childNodes[j + 1].style['background-color'] = line_colors[line_name];
                div_lines.childNodes[i].childNodes[j + 1].style['color'] = '#ffffff';
            }
            else {
                div_lines.childNodes[i].childNodes[j + 1].style['background-color'] = null;
                div_lines.childNodes[i].childNodes[j + 1].style['color'] = null;
            }
        }
        if (t) {
            div_lines.childNodes[i].childNodes[0].style['background-color'] = line_colors[line_name];
            div_lines.childNodes[i].childNodes[0].style['color'] = '#ffffff';
        }
        else {
            div_lines.childNodes[i].childNodes[0].style['background-color'] = null;
            div_lines.childNodes[i].childNodes[0].style['color'] = null;
        }
    }
}
function invert_line(line_name, direct) {
    if (direct) {
        window.is_lines[line_name][direct] = !window.is_lines[line_name][direct];
    }
    else {
        let ts = Object.values(window.is_lines[line_name]);
        let t = ts[0] || ts[1];
        for (each_direct in window.is_lines[line_name]) {
            window.is_lines[line_name][each_direct] = !t;
        }
    }
    refresh_lines();
}
function select_lines(this_btn, action) {
    if (action === 'ok') {
        document.getElementById('selectLinesContent').style = 'display: none;';
        count_lines();
        return;
    }
    else if (action === 'all') {
        for (line_name in window.is_lines) {
            for (direct in window.is_lines[line_name]) {
                window.is_lines[line_name][direct] = true;
            }
        }
    }
    else if (action === 'invert') {
        for (line_name in window.is_lines) {
            for (direct in window.is_lines[line_name]) {
                window.is_lines[line_name][direct] = !window.is_lines[line_name][direct];
            }
        }
    }
    else if (action === 'none') {
        for (line_name in window.is_lines) {
            for (direct in window.is_lines[line_name]) {
                window.is_lines[line_name][direct] = false;
            }
        }
    }
    refresh_lines();
    if (this_btn) this_btn.className = 'popup-btn btn-selected';
}

function start() {
    close_siderbar();
    set_time_after_if_before();
    var start_hour = parseInt(document.getElementById('startHour').innerText);
    var start_minute = parseInt(document.getElementById('startMinute').innerText);
    var start_seconds = parseInt(document.getElementById('startSecond').innerText);
    var end_hour = parseInt(document.getElementById('endHour').innerText);
    var end_minute = parseInt(document.getElementById('endMinute').innerText);
    var end_seconds = parseInt(document.getElementById('endSecond').innerText);
    var speed = parseFloat(document.getElementById('speed').innerText);
    if (start_hour <= 2) start_hour += 24;
    if (end_hour <= 2) end_hour += 24;
    draw_trains(
        start_hour * 60 + start_minute + start_seconds / 60,
        end_hour * 60 + end_minute + end_seconds / 60,
        speed,
        window.wde,
        window.is_lines,
    );
}
function stop() {
    stop_set_time();
    open_siderbar();
    draw_map();
}